package cg.practice.sai.streamapi;

import java.util.Scanner;

public class Main1 {
	public static void main(String[] args) {

		Scanner scanner = new Scanner(System.in);

		String str = scanner.nextLine();

		int lrsLength = findLongestRepeatingSubsequence(str);

		System.out.println(lrsLength);
	}

	public static int findLongestRepeatingSubsequence(String str) {
		int n = str.length();
		int maxLength = 0;

		for (int start = 0; start < n; start++) {
			for (int end = start + 1; end < n; end++) {
				// Check if the current subsequence is repeating
				if (isRepeating(str, start, end)) {
					// Update the maximum length if necessary
					maxLength = Math.max(maxLength, end - start + 1);
				}
			}
		}

		// Return the maximum length
		return maxLength;
	}

	public static boolean isRepeating(String str, int start, int end) {
		// Check if the current subsequence is a substring of the rest of the string
		// starting from the end index
		return str.indexOf(str.substring(start, end + 1), end + 1) != -1;
	}
}
